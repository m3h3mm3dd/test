@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary: #3B82F6;
  --background: #ffffff;
  --foreground: #171717;
  --muted: #e5e7eb;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* NProgress */
#nprogress {
  pointer-events: none;
}

#nprogress .bar {
  background: var(--primary, #3b82f6);
  position: fixed;
  z-index: 9999;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  border-radius: 0 2px 2px 0;
  transition: opacity 0.2s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideRight {
  from { opacity: 0; transform: translateX(-20px); }
  to { opacity: 1; transform: translateX(0); }
}

@keyframes slideDown {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Animation utility classes */
.animate-fadeIn {
  animation: fadeIn 0.4s ease-out forwards;
}

.animate-slideUpFade {
  animation: slideUp 0.4s ease-out forwards;
}

.animate-slideRightFade {
  animation: slideRight 0.4s ease-out forwards;
}

.animate-slideDownFade {
  animation: slideDown 0.4s ease-out forwards;
}

/* For elements that should animate in with a delay */
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}
/* Shine effect animation for task cards */
@keyframes shine {
  0% {
    transform: translateX(-100%);
  }
  60% {
    transform: translateX(100%);
  }
  100% {
    transform: translateX(100%);
  }
}

.animate-shine {
  animation: shine 1.5s infinite;
}

/* Task card transition effects */
.task-card-enter {
  opacity: 0;
  transform: translateY(20px);
}

.task-card-enter-active {
  opacity: 1;
  transform: translateY(0);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

.task-card-exit {
  opacity: 1;
}

.task-card-exit-active {
  opacity: 0;
  transform: translateY(-20px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

/* Task card status styles */
.task-status-not-started {
  @apply bg-gray-100 text-gray-700 dark:bg-gray-800 dark:text-gray-300;
}

.task-status-in-progress {
  @apply bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300;
}

.task-status-completed {
  @apply bg-green-100 text-green-700 dark:bg-green-900/30 dark:text-green-300;
}

/* Task priority styles */
.task-priority-high {
  @apply bg-red-100 text-red-700 dark:bg-red-900/30 dark:text-red-300 border-l-4 border-red-500;
}

.task-priority-medium {
  @apply bg-amber-100 text-amber-700 dark:bg-amber-900/30 dark:text-amber-300 border-l-4 border-amber-500;
}

.task-priority-low {
  @apply bg-blue-100 text-blue-700 dark:bg-blue-900/30 dark:text-blue-300 border-l-4 border-blue-500;
}

/* Improved scrollbar for task lists */
.task-list::-webkit-scrollbar {
  width: 6px;
}

.task-list::-webkit-scrollbar-track {
  background: transparent;
}

.task-list::-webkit-scrollbar-thumb {
  background-color: hsl(var(--muted));
  border-radius: 3px;
}

.task-list::-webkit-scrollbar-thumb:hover {
  background-color: hsl(var(--muted-foreground));
}

/* Task detail animations */
.task-detail-animate-in {
  animation: fadeSlideUp 0.4s ease-out forwards;
}

@keyframes fadeSlideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Card hover effects */
.hover-card-shadow {
  transition: box-shadow 0.3s ease, transform 0.3s ease;
}

.hover-card-shadow:hover {
  transform: translateY(-5px);
  box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1);
}

/* Task complete button effect */
.task-complete-button {
  transition: transform 0.2s ease, background-color 0.2s ease;
}

.task-complete-button:hover {
  transform: scale(1.1);
}

.task-complete-button:active {
  transform: scale(0.95);
}