@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --primary: #3B82F6;
  --background: #ffffff;
  --foreground: #171717;
  --muted: #e5e7eb;
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

/* NProgress */
#nprogress {
  pointer-events: none;
}

#nprogress .bar {
  background: var(--primary, #3b82f6);
  position: fixed;
  z-index: 9999;
  top: 0;
  left: 0;
  width: 100%;
  height: 3px;
  border-radius: 0 2px 2px 0;
  transition: opacity 0.2s ease;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes slideRight {
  from { opacity: 0; transform: translateX(-20px); }
  to { opacity: 1; transform: translateX(0); }
}

@keyframes slideDown {
  from { opacity: 0; transform: translateY(-20px); }
  to { opacity: 1; transform: translateY(0); }
}

/* Animation utility classes */
.animate-fadeIn {
  animation: fadeIn 0.4s ease-out forwards;
}

.animate-slideUpFade {
  animation: slideUp 0.4s ease-out forwards;
}

.animate-slideRightFade {
  animation: slideRight 0.4s ease-out forwards;
}

.animate-slideDownFade {
  animation: slideDown 0.4s ease-out forwards;
}

/* For elements that should animate in with a delay */
.delay-100 {
  animation-delay: 100ms;
}

.delay-200 {
  animation-delay: 200ms;
}

.delay-300 {
  animation-delay: 300ms;
}