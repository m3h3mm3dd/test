/* Modern Task Management CSS */
:root {
  /* Color Variables */
  --primary: #3a6eff;
  --primary-dark: #2855d9;
  --primary-alpha: rgba(58, 110, 255, 0.1);
  --success: #00c853;
  --success-alpha: rgba(0, 200, 83, 0.1);
  --warning: #ffb400;
  --warning-alpha: rgba(255, 180, 0, 0.1);
  --destructive: #ff3b30;
  --destructive-alpha: rgba(255, 59, 48, 0.1);
  --foreground: #1a1a1a;
  --background: #ffffff;
  --card: #f9fafc;
  --accent: #f0f2f5;
  --border: #e2e8f0;
  --muted: #f0f4f8;
  --muted-foreground: #64748b;
  --shadow: rgba(0, 0, 0, 0.08);
  
  /* Task Priority Colors */
  --task-high-priority: #ff3b30;
  --task-medium-priority: #ffb400;
  --task-low-priority: #00c853;
}

/* Base Styles */
.project-tasks-container {
  max-width: 1200px;
  margin: 0 auto;
  padding: 1.5rem;
  opacity: 1; /* Make sure content is visible by default */
}

.fade-in {
  opacity: 1;
  transform: translateY(0);
}

/* Header */
.project-tasks-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 2rem;
}

.project-tasks-title {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.back-button {
  width: 2.5rem;
  height: 2.5rem;
  border-radius: 50%;
  border: none;
  background-color: var(--accent);
  color: var(--foreground);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 2px 8px var(--shadow);
}

.back-button:hover {
  background-color: var(--primary-alpha);
  color: var(--primary);
  box-shadow: 0 4px 12px rgba(58, 110, 255, 0.15);
  transform: translateY(-2px);
}

.project-tasks-title h1 {
  font-size: 2rem;
  font-weight: 700;
  margin: 0;
  color: var(--foreground);
  position: relative;
}

.title-animation {
  position: relative;
  display: inline-block;
}

.title-animation::after {
  content: '';
  position: absolute;
  width: 30%;
  height: 3px;
  background-color: var(--primary);
  bottom: -6px;
  left: 0;
  transform: scaleX(0);
  transform-origin: left;
  transition: transform 0.6s ease-out;
  animation: expandLine 0.8s 0.3s forwards;
}

@keyframes expandLine {
  to {
    transform: scaleX(1);
  }
}

.subtitle {
  font-size: 1rem;
  color: var(--muted-foreground);
  margin: 0.5rem 0 0 0;
  opacity: 0;
  animation: fadeIn 0.8s 0.6s forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

.create-task-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.7rem 1.35rem;
  border-radius: 0.75rem;
  background-color: var(--primary);
  color: white;
  font-size: 0.95rem;
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
  box-shadow: 0 4px 12px rgba(58, 110, 255, 0.25);
  position: relative;
  overflow: hidden;
}

.create-task-button::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
  transition: 0.5s;
}

.create-task-button:hover {
  background-color: var(--primary-dark);
  transform: translateY(-3px);
  box-shadow: 0 8px 16px rgba(58, 110, 255, 0.35);
}

.create-task-button:hover::before {
  left: 100%;
}

.create-task-button:active {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(58, 110, 255, 0.3);
}

/* Filters */
.project-tasks-filters {
  display: flex;
  flex-wrap: wrap;
  gap: 1.25rem;
  margin-bottom: 2rem;
  animation: slideUp 0.6s ease-out;
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.search-bar {
  position: relative;
  flex: 1;
  min-width: 15rem;
}

.search-icon {
  position: absolute;
  left: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--muted-foreground);
  width: 1rem;
  height: 1rem;
}

.search-bar input {
  width: 100%;
  padding: 0.85rem 2.5rem 0.85rem 2.5rem;
  border-radius: 0.75rem;
  border: 1px solid var(--border);
  background-color: var(--background);
  color: var(--foreground);
  font-size: 0.95rem;
  transition: all 0.3s ease;
  box-shadow: 0 2px 10px var(--shadow);
}

.search-bar input:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--primary-alpha);
}

.clear-search {
  position: absolute;
  right: 1rem;
  top: 50%;
  transform: translateY(-50%);
  color: var(--muted-foreground);
  background: none;
  border: none;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  transition: background-color 0.2s ease;
}

.clear-search:hover {
  background-color: var(--accent);
  color: var(--foreground);
}

.filter-controls {
  display: flex;
  align-items: center;
  gap: 1.25rem;
}

.filter-group {
  display: flex;
  flex-direction: column;
  gap: 0.3rem;
}

.filter-group label {
  font-size: 0.75rem;
  font-weight: 600;
  color: var(--muted-foreground);
  text-transform: uppercase;
  letter-spacing: 0.03em;
}

.filter-group select {
  padding: 0.75rem 0.95rem;
  border-radius: 0.75rem;
  border: 1px solid var(--border);
  background-color: var(--background);
  color: var(--foreground);
  font-size: 0.9rem;
  cursor: pointer;
  min-width: 10rem;
  transition: all 0.2s ease;
  box-shadow: 0 2px 8px var(--shadow);
  appearance: none;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='16' height='16' viewBox='0 0 24 24' fill='none' stroke='%2364748b' stroke-width='2' stroke-linecap='round' stroke-linejoin='round'%3E%3Cpath d='m6 9 6 6 6-6'/%3E%3C/svg%3E");
  background-repeat: no-repeat;
  background-position: right 0.75rem center;
  background-size: 1rem;
  padding-right: 2.5rem;
}

.filter-group select:focus {
  outline: none;
  border-color: var(--primary);
  box-shadow: 0 0 0 3px var(--primary-alpha);
}

.toggle-button {
  padding: 0.75rem 1.25rem;
  border-radius: 0.75rem;
  border: 1px solid var(--border);
  background-color: var(--background);
  color: var(--foreground);
  font-size: 0.9rem;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.25s ease;
  align-self: flex-end;
  box-shadow: 0 2px 8px var(--shadow);
}

.toggle-button:hover {
  background-color: var(--accent);
  box-shadow: 0 4px 12px var(--shadow);
}

.toggle-button.active {
  background-color: var(--primary);
  color: white;
  border-color: var(--primary);
  box-shadow: 0 4px 12px rgba(58, 110, 255, 0.25);
}

/* Task board */
.task-board {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
}

.task-column {
  display: flex;
  flex-direction: column;
  background-color: var(--card);
  border-radius: 1rem;
  border: 1px solid var(--border);
  overflow: hidden;
  height: fit-content;
  box-shadow: 0 4px 20px var(--shadow);
}

.column-animate {
  animation: columnFadeIn 0.6s ease-out forwards;
}

@keyframes columnFadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.column-header {
  padding: 1.25rem;
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-bottom: 1px solid var(--border);
}

.column-header h3 {
  font-size: 1.05rem;
  font-weight: 600;
  margin: 0;
  color: var(--foreground);
}

.column-header.not-started {
  background-color: var(--muted);
  position: relative;
  overflow: hidden;
}

.column-header.not-started::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 3px;
  background-color: var(--foreground);
  bottom: 0;
  left: 0;
  opacity: 0.1;
}

.column-header.in-progress {
  background-color: var(--primary-alpha);
  position: relative;
  overflow: hidden;
}

.column-header.in-progress::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 3px;
  background-color: var(--primary);
  bottom: 0;
  left: 0;
}

.column-header.completed {
  background-color: var(--success-alpha);
  position: relative;
  overflow: hidden;
}

.column-header.completed::before {
  content: '';
  position: absolute;
  width: 100%;
  height: 3px;
  background-color: var(--success);
  bottom: 0;
  left: 0;
}

.task-count {
  font-size: 0.85rem;
  font-weight: 600;
  padding: 0.25rem 0.7rem;
  border-radius: 1rem;
  background-color: rgba(0, 0, 0, 0.07);
  color: var(--foreground);
}

.column-tasks {
  padding: 1.25rem;
  display: flex;
  flex-direction: column;
  gap: 1rem;
  min-height: 10rem;
}

.empty-column {
  height: 5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--muted-foreground);
  font-size: 0.9rem;
  border: 2px dashed var(--accent);
  border-radius: 0.75rem;
  background-color: rgba(0, 0, 0, 0.02);
}

.task-card {
  position: relative;
  background-color: var(--background);
  border-radius: 1rem;
  border: 1px solid var(--border);
  overflow: hidden;
  transition: all 0.25s cubic-bezier(0.2, 0.8, 0.2, 1);
  cursor: pointer;
  display: flex;
  box-shadow: 0 2px 12px var(--shadow);
}

@keyframes taskFadeIn {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.task-card:hover {
  transform: translateY(-5px) scale(1.02);
  box-shadow: 0 12px 24px -10px rgba(0, 0, 0, 0.1);
  z-index: 1;
}

.task-card.completed {
  opacity: 0.7;
  background-color: var(--muted);
}

.task-priority {
  width: 0.35rem;
  height: 100%;
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
}

.task-content {
  flex: 1;
  padding: 1.25rem;
  padding-left: 1.5rem;
}

.task-header {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 0.75rem;
  margin-bottom: 0.5rem;
}

.task-title {
  font-size: 1.05rem;
  font-weight: 600;
  margin: 0;
  color: var(--foreground);
  flex: 1;
}

.priority-tag {
  padding: 0.25rem 0.6rem;
  font-size: 0.7rem;
  font-weight: 600;
  border-radius: 0.5rem;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  white-space: nowrap;
}

.task-card.completed .task-title {
  text-decoration: line-through;
  color: var(--muted-foreground);
}

.task-description {
  font-size: 0.9rem;
  color: var(--muted-foreground);
  margin: 0 0 1rem 0;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  line-height: 1.5;
}

.task-footer {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-top: 0.5rem;
}

.task-meta {
  display: flex;
  gap: 1rem;
  font-size: 0.75rem;
  color: var(--muted-foreground);
}

.task-deadline, .task-assignee {
  display: flex;
  align-items: center;
  gap: 0.35rem;
}

.task-deadline.overdue {
  color: var(--destructive);
  font-weight: 600;
}

.task-deadline.overdue svg {
  animation: pulse 1.5s infinite;
}

@keyframes pulse {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.15);
  }
  100% {
    transform: scale(1);
  }
}

.task-deadline.today {
  color: var(--warning);
  font-weight: 600;
}

.complete-button {
  width: 2rem;
  height: 2rem;
  border-radius: 50%;
  border: 1.5px solid var(--border);
  background-color: var(--background);
  color: var(--muted-foreground);
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.25s ease;
  box-shadow: 0 2px 5px var(--shadow);
}

.complete-button:hover {
  border-color: var(--success);
  color: var(--success);
  transform: scale(1.1);
  box-shadow: 0 2px 8px rgba(0, 200, 83, 0.25);
}

/* Empty and error states */
.modern-empty-state {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 4rem 1rem;
  background-color: var(--card);
  border-radius: 1rem;
  border: 1px solid var(--border);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  animation: fadeIn 0.5s ease-out;
}

.empty-kanban {
  margin-bottom: 2rem;
  width: 100%;
  max-width: 36rem;
}

.empty-columns {
  display: flex;
  justify-content: space-between;
  gap: 1rem;
  margin-bottom: 1.5rem;
}

.kanban-column {
  flex: 1;
  min-width: 0;
  background-color: var(--background);
  border-radius: 0.75rem;
  border: 1px solid var(--border);
  overflow: hidden;
  height: 8rem;
  display: flex;
  flex-direction: column;
  box-shadow: 0 2px 10px var(--shadow);
}

.kanban-column .column-header {
  padding: 0.75rem;
  border-bottom: 1px solid var(--border);
  font-size: 0.85rem;
  font-weight: 600;
  color: var(--foreground);
  display: flex;
  justify-content: center;
}

.kanban-column.todo .column-header {
  background-color: var(--muted);
  color: var(--foreground);
}

.kanban-column.progress .column-header {
  background-color: var(--primary-alpha);
  color: var(--primary);
}

.kanban-column.done .column-header {
  background-color: var(--success-alpha);
  color: var(--success);
}

.column-empty-content {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--muted-foreground);
  opacity: 0.5;
}

.task-cards {
  position: relative;
  height: 10rem;
}

.task-card-animated {
  position: absolute;
  background-color: var(--background);
  border-radius: 1rem;
  border: 1px solid var(--border);
  height: 5.5rem;
  width: 90%;
  left: 5%;
  display: flex;
  opacity: 0;
  animation: floatTask 5s ease-in-out infinite;
  box-shadow: 0 8px 20px rgba(0, 0, 0, 0.08);
}

.task-card-animated:nth-child(1) {
  top: 0;
  z-index: 2;
  animation-delay: 0s;
}

.task-card-animated:nth-child(2) {
  top: 2.5rem;
  left: 2%;
  width: 85%;
  height: 5rem;
  z-index: 1;
  opacity: 0.7;
}

.task-priority {
  width: 0.35rem;
  min-height: 100%;
  background-color: var(--primary);
}

.task-content-animated {
  flex: 1;
  padding: 1rem;
  display: flex;
  flex-direction: column;
  gap: 0.5rem;
}

.task-content-animated::before {
  content: '';
  height: 1rem;
  width: 70%;
  background-color: var(--muted);
  border-radius: 0.25rem;
}

.task-content-animated::after {
  content: '';
  height: 0.75rem;
  width: 90%;
  background-color: var(--muted);
  border-radius: 0.25rem;
  opacity: 0.7;
}

@keyframes floatTask {
  0%, 100% {
    transform: translateY(0) rotate(0deg);
    opacity: 0.3;
  }
  50% {
    transform: translateY(-15px) rotate(0.5deg);
    opacity: 0.5;
  }
}

.empty-content {
  text-align: center;
  animation: fadeUp 0.8s 0.4s both;
}

@keyframes fadeUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.empty-content h2 {
  font-size: 1.75rem;
  font-weight: 700;
  margin: 0 0 1rem 0;
  color: var(--foreground);
  background: linear-gradient(90deg, var(--foreground), var(--primary));
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
}

.empty-content p {
  color: var(--muted-foreground);
  font-size: 1.05rem;
  line-height: 1.5;
  margin: 0 0 2rem 0;
  max-width: 25rem;
}

.empty-primary-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.85rem 1.75rem;
  border-radius: 0.75rem;
  background-color: var(--primary);
  color: white;
  font-size: 1rem;
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: all 0.3s cubic-bezier(0.2, 0.8, 0.2, 1);
  box-shadow: 0 4px 16px rgba(58, 110, 255, 0.3);
}

.empty-primary-button:hover {
  background-color: var(--primary-dark);
  transform: translateY(-3px);
  box-shadow: 0 8px 24px rgba(58, 110, 255, 0.4);
}

.no-results {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  text-align: center;
  padding: 4rem 1rem;
  background-color: var(--card);
  border-radius: 1rem;
  border: 1px solid var(--border);
  box-shadow: 0 4px 20px rgba(0, 0, 0, 0.05);
  animation: fadeIn 0.5s ease-out;
  color: var(--muted-foreground);
}

.no-results svg {
  margin-bottom: 1.5rem;
  color: var(--muted-foreground);
  animation: rotate 10s linear infinite;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

.no-results h2 {
  font-size: 1.5rem;
  font-weight: 600;
  margin: 0 0 0.75rem 0;
  color: var(--foreground);
}

.no-results p {
  color: var(--muted-foreground);
  margin: 0 0 1.5rem 0;
  max-width: 20rem;
}

.reset-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.75rem 1.5rem;
  border-radius: 0.75rem;
  background-color: var(--primary);
  color: white;
  font-size: 0.95rem;
  font-weight: 500;
  border: none;
  cursor: pointer;
  transition: all 0.3s ease;
  box-shadow: 0 4px 12px rgba(58, 110, 255, 0.25);
}

.reset-button:hover {
  background-color: var(--primary-dark);
  transform: translateY(-2px);
  box-shadow: 0 6px 16px rgba(58, 110, 255, 0.35);
}

/* Loading skeletons */
.loading-skeleton {
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  gap: 1.5rem;
}

.column-skeleton {
  background-color: var(--card);
  border-radius: 1rem;
  border: 1px solid var(--border);
  overflow: hidden;
  box-shadow: 0 4px 20px var(--shadow);
}

.column-header-skeleton {
  height: 3.5rem;
  background-color: var(--accent);
  animation: pulse 1.5s infinite;
}

.task-skeleton {
  margin: 1.25rem;
  padding: 1.25rem;
  border-radius: 0.75rem;
  background-color: var(--background);
  border: 1px solid var(--border);
  box-shadow: 0 2px 10px var(--shadow);
}

.task-skeleton-title {
  height: 1.1rem;
  width: 70%;
  background-color: var(--accent);
  border-radius: 0.25rem;
  margin-bottom: 1rem;
  animation: pulse 1.5s infinite;
}

.task-skeleton-desc {
  height: 0.85rem;
  width: 90%;
  background-color: var(--accent);
  border-radius: 0.25rem;
  animation: pulse 1.5s infinite;
  margin-bottom: 0.5rem;
}

.task-skeleton-desc:last-child {
  width: 60%;
}

@keyframes pulse {
  0% {
    opacity: 0.6;
  }
  50% {
    opacity: 0.4;
  }
  100% {
    opacity: 0.6;
  }
}

/* Responsive adjustments */
@media (max-width: 768px) {
  .project-tasks-header {
    flex-direction: column;
    align-items: flex-start;
    gap: 1.25rem;
  }
  
  .project-tasks-filters {
    flex-direction: column;
  }
  
  .filter-controls {
    flex-wrap: wrap;
    width: 100%;
  }
  
  .filter-group {
    flex: 1;
    min-width: 10rem;
  }
  
  .task-board {
    grid-template-columns: 1fr;
  }
  
  .toggle-button {
    flex: 1;
    text-align: center;
  }
}

/* Animations for enhanced experience */
@media (prefers-reduced-motion: no-preference) {
  .task-card:active {
    transform: scale(0.98);
  }
  
  @keyframes fadeSlideIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
}